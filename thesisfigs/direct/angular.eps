%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(r) 6.0
%%For: (Stroud) (Optics)
%%Title: (angular.eps)
%%CreationDate: (1/21/97) (5:06 PM)
%%BoundingBox: 230 144 433 722
%%HiResBoundingBox: 230.1717 144.0478 432.9783 721.7388
%%DocumentProcessColors: Black
%%DocumentFonts: CMMI12
%%+ Symbol
%%+ Times-Italic
%%+ Times-Roman
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 0
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -102 684 1 826 581 58 0 1 2 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: CMMI12
%%IncludeFont: Symbol
%%IncludeFont: Times-Italic
%%IncludeFont: Times-Roman
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _CMMI12 CMMI12
[0/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zerooldstyle
/oneoldstyle
/twooldstyle
/threeoldstyle
/fouroldstyle
/fiveoldstyle
/sixoldstyle
/sevenoldstyle
/eightoldstyle
/nineoldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/.notdef
/.notdef
161/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
173/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/tie
/_CMMI12/CMMI12 0 0 0 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[/_Symbol/Symbol 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0D0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
u
u
u
0 R
0 G
300 Ar
1 J 1 j 1.128 w 10 M []0 d
%AI3_Note:
0 D
0 XR
269.4656 667.4144 m
269.0257 667.4116 l
268.5829 667.4003 l
268.143 667.3834 l
267.7031 667.358 l
267.2632 667.327 l
266.8233 667.2875 l
265.9462 667.1917 l
265.072 667.0647 l
264.2035 666.9096 l
262.4833 666.5177 l
260.7941 666.0157 l
259.1387 665.4009 l
255.9719 663.8415 l
253.0476 661.8505 l
250.4306 659.4423 l
248.1859 656.6364 l
246.3782 653.4723 l
245.6591 651.7691 l
245.0726 649.9925 l
244.8301 649.0788 l
244.6242 648.151 l
244.4522 647.212 l
244.3197 646.256 l
244.2661 645.7766 l
244.221 645.2915 l
244.1871 644.8065 l
244.1617 644.3158 l
244.1477 643.8251 l
244.142 643.3345 l
244.1448 642.8381 l
244.1589 642.3418 l
244.1815 641.8455 l
244.2125 641.3464 l
244.2548 640.8472 l
244.3084 640.3452 l
244.4409 639.3414 l
244.6129 638.3374 l
245.0698 636.3324 l
245.6789 634.3443 l
247.3286 630.4724 l
249.4972 626.829 l
252.0859 623.5183 l
254.9708 620.6334 l
257.991 618.2365 l
260.9774 616.3668 l
263.741 615.0188 l
264.9874 614.5281 l
266.1126 614.1531 l
267.0996 613.8768 l
S
[]78.8101 d
267.0996 613.8768 m
267.9315 613.6878 l
268.5942 613.5693 l
268.8565 613.5355 l
269.0764 613.5101 l
269.2456 613.496 l
269.3133 613.4904 l
269.3669 613.4876 l
269.4092 613.4848 l
269.4402 613.4848 l
269.4599 613.4848 l
269.4656 613.4848 l
269.4599 613.4848 l
269.4402 613.4848 l
269.4092 613.4848 l
269.3669 613.4819 l
269.2456 613.4735 l
269.0764 613.4594 l
268.8565 613.434 l
268.5942 613.4001 l
267.9315 613.2817 l
267.0996 613.0928 l
266.1126 612.8164 l
263.741 611.9507 l
260.9774 610.6027 l
257.991 608.733 l
254.9708 606.336 l
252.0859 603.4512 l
249.4972 600.1405 l
247.3286 596.4971 l
246.4347 594.5823 l
245.6789 592.6252 l
245.0698 590.6371 l
244.8216 589.636 l
244.6129 588.6321 l
244.4409 587.6282 l
244.3084 586.6242 l
244.2548 586.1223 l
244.2125 585.6231 l
244.1815 585.124 l
244.1589 584.6277 l
244.1448 584.1314 l
244.142 583.6351 l
244.1477 583.1444 l
244.1617 582.6537 l
244.1871 582.163 l
244.221 581.678 l
244.3197 580.7135 l
244.4522 579.7575 l
244.6242 578.8185 l
245.0726 576.977 l
S
[]130.2584 d
245.0726 576.977 m
245.6591 575.2004 l
246.3782 573.4971 l
248.1859 570.3331 l
250.4306 567.5272 l
253.0476 565.1189 l
255.9719 563.128 l
257.5285 562.2933 l
259.1387 561.5686 l
260.7941 560.9538 l
262.4833 560.4519 l
264.2035 560.0599 l
265.072 559.9048 l
265.9462 559.7778 l
266.8233 559.682 l
267.2632 559.6425 l
267.7031 559.6115 l
268.143 559.5861 l
268.5829 559.5692 l
269.0257 559.5579 l
269.4656 559.5551 l
269.9055 559.5579 l
270.3482 559.5692 l
270.7882 559.5861 l
271.2281 559.6115 l
271.668 559.6425 l
272.108 559.682 l
272.985 559.7778 l
273.8592 559.9048 l
274.7277 560.0599 l
276.4479 560.4519 l
278.1371 560.9538 l
279.7925 561.5686 l
282.9593 563.128 l
285.8836 565.1189 l
288.5006 567.5272 l
290.7453 570.3331 l
291.7069 571.8728 l
292.5529 573.4971 l
293.272 575.2004 l
293.8586 576.977 l
294.1011 577.8907 l
294.307 578.8185 l
294.479 579.7575 l
294.6116 580.7135 l
294.6651 581.1929 l
294.7102 581.678 l
294.7441 582.163 l
294.7695 582.6537 l
294.7835 583.1444 l
294.7892 583.6351 l
S
[]201.3431 d
294.7892 583.6351 m
294.7864 584.1314 l
294.7723 584.6277 l
294.7497 585.124 l
294.7187 585.6231 l
294.6228 586.6242 l
294.4903 587.6282 l
294.3182 588.6321 l
293.8614 590.6371 l
293.2523 592.6252 l
291.6026 596.4971 l
289.434 600.1405 l
286.8453 603.4512 l
283.9604 606.336 l
280.9402 608.733 l
277.9538 610.6027 l
275.1902 611.9507 l
273.9437 612.4414 l
272.8186 612.8164 l
271.8316 613.0928 l
270.9997 613.2817 l
270.337 613.4001 l
270.0747 613.434 l
269.8548 613.4594 l
269.6856 613.4735 l
269.6179 613.4791 l
269.5643 613.4819 l
269.522 613.4848 l
269.491 613.4848 l
269.4712 613.4848 l
269.4656 613.4848 l
269.4712 613.4848 l
269.491 613.4848 l
269.522 613.4848 l
269.5643 613.4876 l
269.6856 613.496 l
269.8548 613.5101 l
270.0747 613.5355 l
270.337 613.5693 l
270.9997 613.6878 l
271.8316 613.8768 l
272.8186 614.1531 l
275.1902 615.0188 l
277.9538 616.3668 l
280.9402 618.2365 l
283.9604 620.6334 l
286.8453 623.5183 l
289.434 626.829 l
291.6026 630.4724 l
293.2523 634.3443 l
293.8614 636.3324 l
S
[]278.8597 d
293.8615 636.3324 m
294.1096 637.3335 l
294.3182 638.3374 l
294.4903 639.3414 l
294.6228 640.3452 l
294.6764 640.8472 l
294.7187 641.3464 l
294.7497 641.8455 l
294.7723 642.3418 l
294.7864 642.8381 l
294.7892 643.3345 l
294.7835 643.8251 l
294.7695 644.3158 l
294.7441 644.8065 l
294.7102 645.2915 l
294.6116 646.256 l
294.479 647.212 l
294.307 648.151 l
293.8586 649.9925 l
293.272 651.7691 l
292.5529 653.4723 l
290.7453 656.6364 l
288.5006 659.4423 l
285.8836 661.8505 l
282.9593 663.8415 l
281.4027 664.6762 l
279.7925 665.4009 l
278.1371 666.0157 l
276.4479 666.5177 l
274.7277 666.9096 l
273.8592 667.0647 l
272.985 667.1917 l
272.108 667.2875 l
271.668 667.327 l
271.2281 667.358 l
270.7882 667.3834 l
270.3482 667.4003 l
269.9055 667.4116 l
269.4656 667.4144 l
S
U
U
U
U
u
u
u
u
[]0 d
269.4656 490.8727 m
262.2492 491.3944 l
260.2442 491.6313 l
259.1952 491.7497 l
258.1179 491.8569 l
257.0097 491.9528 l
256.4457 491.9922 l
255.8732 492.0232 l
255.5856 492.0373 l
255.2951 492.0486 l
255.0046 492.0599 l
254.7114 492.0656 l
254.4181 492.0712 l
254.122 492.074 l
253.8259 492.0712 l
253.527 492.0684 l
253.2281 492.0627 l
252.9291 492.0514 l
252.6302 492.0402 l
252.3285 492.0232 l
251.725 491.9781 l
251.1215 491.9161 l
250.5208 491.8371 l
249.9202 491.7384 l
248.7358 491.479 l
247.5852 491.1237 l
246.4882 490.664 l
245.4646 490.0887 l
244.5368 489.3922 l
244.1194 488.9946 l
243.7331 488.5631 l
243.3862 488.1006 l
243.0817 487.6015 l
242.8194 487.0713 l
242.6051 486.5073 l
242.5177 486.214 l
242.4415 485.9123 l
242.3795 485.6021 l
242.3344 485.2834 l
242.3006 484.9563 l
242.2808 484.6235 l
242.278 484.2852 l
242.2893 483.9383 l
242.3175 483.583 l
242.3598 483.222 l
242.4218 482.8554 l
242.498 482.4832 l
242.701 481.7218 l
242.9717 480.9378 l
243.7247 479.3248 l
S
[]36.5424 d
243.7247 479.3247 m
244.7624 477.6694 l
246.0737 476 l
249.4521 472.7542 l
253.6116 469.8439 l
258.1433 467.4977 l
260.388 466.5812 l
262.5228 465.8452 l
264.477 465.2868 l
266.1803 464.8948 l
267.5762 464.6495 l
268.143 464.5705 l
268.614 464.5198 l
268.9834 464.4859 l
269.13 464.4775 l
269.2513 464.469 l
269.3444 464.4662 l
269.412 464.4634 l
269.4515 464.4634 l
269.4656 464.4634 l
269.4515 464.4634 l
269.412 464.4634 l
269.3444 464.4606 l
269.2513 464.4577 l
268.9834 464.4408 l
268.614 464.407 l
268.143 464.3562 l
267.5762 464.2773 l
266.1803 464.0319 l
264.477 463.6399 l
262.5228 463.0816 l
258.1433 461.4291 l
253.6116 459.0828 l
249.4521 456.1726 l
247.6444 454.5765 l
246.0737 452.9267 l
244.7624 451.2573 l
243.7247 449.602 l
242.9717 447.9889 l
242.701 447.205 l
242.591 446.8215 l
242.498 446.4436 l
242.4218 446.0713 l
242.3598 445.7048 l
242.3175 445.3438 l
242.2893 444.9885 l
242.278 444.6416 l
242.2808 444.3032 l
242.3006 443.9704 l
242.3344 443.6433 l
242.3795 443.3247 l
S
[]104.5261 d
242.3795 443.3247 m
242.4415 443.0145 l
242.6051 442.4194 l
242.8194 441.8554 l
243.0817 441.3253 l
243.7331 440.3637 l
244.1194 439.9322 l
244.5368 439.5346 l
245.4646 438.8381 l
246.4882 438.2628 l
247.5852 437.8031 l
248.7358 437.4478 l
249.3252 437.3068 l
249.9202 437.1883 l
250.5208 437.0896 l
251.1215 437.0107 l
251.725 436.9486 l
252.0267 436.9233 l
252.3285 436.9035 l
252.6302 436.8866 l
252.9291 436.8753 l
253.2281 436.864 l
253.527 436.8584 l
262.2492 437.5324 l
264.1499 437.7467 l
265.9688 437.9131 l
266.8571 437.9751 l
267.297 437.9977 l
267.7313 438.0202 l
268.1684 438.0343 l
268.3856 438.04 l
268.5999 438.0456 l
268.817 438.0513 l
269.0341 438.0541 l
269.2485 438.0541 l
269.4656 438.0541 l
276.682 437.5324 l
278.687 437.2955 l
280.8133 437.0699 l
281.9215 436.974 l
282.4856 436.9346 l
283.058 436.9035 l
283.3456 436.8894 l
283.6361 436.8782 l
283.9265 436.8669 l
284.2199 436.8612 l
284.5131 436.8556 l
284.8092 436.8528 l
285.1053 436.8556 l
285.4043 436.8584 l
285.7032 436.864 l
S
[]150.8156 d
285.7032 436.864 m
286.0021 436.8753 l
286.6027 436.9035 l
286.9045 436.9233 l
287.2062 436.9486 l
287.8097 437.0107 l
288.4104 437.0896 l
289.011 437.1883 l
290.1954 437.4478 l
291.346 437.8031 l
292.443 438.2628 l
293.4666 438.8381 l
294.3944 439.5346 l
294.8118 439.9322 l
295.1981 440.3637 l
295.545 440.8262 l
295.8495 441.3253 l
296.1118 441.8554 l
296.3261 442.4194 l
296.4135 442.7127 l
296.4897 443.0145 l
296.5517 443.3247 l
296.5968 443.6433 l
296.6307 443.9704 l
296.6504 444.3032 l
296.6532 444.6416 l
296.642 444.9885 l
296.6137 445.3438 l
296.5715 445.7048 l
296.4333 446.4436 l
296.3402 446.8215 l
296.2303 447.205 l
295.9595 447.9889 l
295.2066 449.602 l
294.1688 451.2573 l
292.8575 452.9267 l
289.4792 456.1726 l
285.3196 459.0828 l
280.7879 461.4291 l
278.5432 462.3456 l
276.4084 463.0816 l
274.4542 463.6399 l
272.7509 464.0319 l
271.355 464.2773 l
270.7882 464.3562 l
270.3173 464.407 l
269.9478 464.4408 l
269.8012 464.4493 l
269.68 464.4577 l
269.5869 464.4606 l
269.5192 464.4634 l
S
[]201.736 d
269.5192 464.4634 m
269.4797 464.4634 l
269.4656 464.4634 l
269.4797 464.4634 l
269.5192 464.4634 l
269.5869 464.4662 l
269.68 464.469 l
269.9478 464.4859 l
270.3173 464.5198 l
270.7882 464.5705 l
271.355 464.6495 l
272.7509 464.8948 l
274.4542 465.2868 l
276.4084 465.8452 l
280.7879 467.4977 l
285.3196 469.8439 l
289.4792 472.7542 l
292.8575 476 l
294.1688 477.6694 l
295.2066 479.3248 l
295.6183 480.1369 l
295.9595 480.9378 l
296.2303 481.7218 l
296.3402 482.1053 l
296.4333 482.4832 l
296.5094 482.8554 l
296.5715 483.222 l
296.6137 483.583 l
296.642 483.9383 l
296.6532 484.2852 l
296.6504 484.6235 l
296.6307 484.9563 l
296.5968 485.2834 l
296.5517 485.6021 l
296.4897 485.9123 l
296.4135 486.214 l
296.3261 486.5073 l
295.8495 487.6015 l
295.545 488.1006 l
295.1981 488.5631 l
294.3944 489.3922 l
293.4666 490.0887 l
292.443 490.664 l
291.346 491.1237 l
290.1954 491.479 l
289.606 491.62 l
289.011 491.7384 l
288.4104 491.8371 l
287.8097 491.9161 l
287.2062 491.9781 l
286.9045 492.0035 l
S
[]251.5579 d
286.9045 492.0035 m
286.6027 492.0232 l
286.301 492.0402 l
286.0021 492.0514 l
285.7032 492.0627 l
285.4043 492.0684 l
276.682 491.3944 l
269.4656 490.8727 l
S
U
U
U
U
u
u
u
u
[]0 d
269.4656 341.0394 m
269.271 341.0366 l
269.0764 341.031 l
268.879 341.0197 l
268.6845 341.0028 l
268.4899 340.983 l
268.2981 340.9605 l
267.909 340.8984 l
267.5254 340.8167 l
267.1448 340.7208 l
266.3974 340.4698 l
265.6727 340.1483 l
264.9733 339.7535 l
264.3078 339.2882 l
263.6818 338.7525 l
262.5707 337.4778 l
262.0941 336.7531 l
261.6739 335.9804 l
261.3102 335.171 l
261 334.3363 l
260.5205 332.6612 l
260.1568 331.1018 l
259.9735 330.4137 l
259.872 330.1035 l
259.762 329.8158 l
259.6351 329.5536 l
259.4913 329.3224 l
259.3249 329.1193 l
259.2318 329.0319 l
259.1331 328.9501 l
258.9104 328.8119 l
258.7862 328.7583 l
258.6537 328.7104 l
258.5099 328.6737 l
258.3576 328.6455 l
258.1912 328.6286 l
258.0164 328.6174 l
257.8275 328.6174 l
257.6244 328.6286 l
257.4101 328.6484 l
257.1789 328.6766 l
256.6741 328.7611 l
256.1045 328.8853 l
253.1011 329.7256 l
248.8232 330.9608 l
246.2373 331.6122 l
243.4398 332.1931 l
242.0016 332.43 l
241.2825 332.5315 l
240.5634 332.6161 l
S
[]36.4802 d
240.5634 332.6161 m
239.85 332.6866 l
239.1478 332.7402 l
238.4569 332.7769 l
237.7801 332.7938 l
237.1258 332.7881 l
236.4942 332.7628 l
235.8935 332.712 l
235.321 332.6387 l
234.7881 332.54 l
234.2946 332.4159 l
233.8462 332.2636 l
233.4457 332.0888 l
233.1017 331.8829 l
232.8112 331.6517 l
232.5856 331.3951 l
232.4221 331.1102 l
232.329 330.8001 l
232.3093 330.4645 l
232.3601 330.1035 l
232.4926 329.72 l
232.7012 329.3139 l
232.9917 328.8881 l
233.8208 327.98 l
234.9855 327.0156 l
236.4772 326.0088 l
240.3745 323.9503 l
245.2756 321.979 l
250.7972 320.2504 l
256.4315 318.8855 l
259.1162 318.3582 l
261.6175 317.9408 l
263.8679 317.6278 l
265.8024 317.4078 l
267.3703 317.2725 l
268.002 317.2274 l
268.5237 317.1991 l
268.9326 317.1823 l
269.2287 317.171 l
269.4064 317.1682 l
269.4656 317.1682 l
269.4064 317.1682 l
269.2287 317.1654 l
268.9326 317.154 l
268.5237 317.1371 l
267.3703 317.0638 l
265.8024 316.9284 l
263.8679 316.7085 l
261.6175 316.3955 l
256.4315 315.4508 l
250.7972 314.0859 l
S
[]105.4799 d
250.7972 314.0859 m
245.2756 312.3572 l
240.3745 310.3861 l
236.4772 308.3275 l
234.9855 307.3207 l
233.8208 306.3563 l
232.9917 305.4482 l
232.7012 305.0224 l
232.4926 304.6163 l
232.3601 304.2328 l
232.3093 303.8719 l
232.329 303.5363 l
232.4221 303.2261 l
232.5856 302.9412 l
232.8112 302.6846 l
233.1017 302.4534 l
233.4457 302.2475 l
233.8462 302.0727 l
234.2946 301.9204 l
234.7881 301.7963 l
235.321 301.6976 l
235.8935 301.6243 l
236.4942 301.5736 l
237.1258 301.5482 l
237.7801 301.5426 l
238.4569 301.5595 l
239.1478 301.5961 l
239.85 301.6497 l
240.5634 301.7202 l
242.0016 301.9063 l
243.4398 302.1432 l
248.8232 303.3755 l
253.1011 304.6107 l
254.7565 305.0957 l
256.1045 305.4511 l
256.6741 305.5751 l
257.1789 305.6598 l
257.4101 305.6879 l
257.6244 305.7077 l
257.8275 305.7189 l
258.0164 305.7189 l
258.1912 305.7077 l
258.3576 305.6907 l
258.5099 305.6626 l
258.6537 305.6259 l
258.9104 305.5244 l
259.026 305.4595 l
259.1331 305.3862 l
259.3249 305.217 l
259.4913 305.0139 l
259.6351 304.7827 l
S
[]156.4719 d
259.6351 304.7827 m
259.762 304.5205 l
259.9735 303.9226 l
260.1568 303.2345 l
260.5205 301.6751 l
261 300 l
261.3102 299.1653 l
261.6739 298.3559 l
262.0941 297.5833 l
262.5707 296.8585 l
263.1008 296.1902 l
263.6818 295.5839 l
264.3078 295.0481 l
264.9733 294.5828 l
265.6727 294.188 l
266.3974 293.8665 l
266.7697 293.7311 l
267.1448 293.6155 l
267.5254 293.5196 l
267.909 293.4379 l
268.2981 293.3758 l
268.4899 293.3533 l
268.6845 293.3335 l
268.879 293.3166 l
269.0764 293.3053 l
269.271 293.2997 l
269.4656 293.2969 l
269.6602 293.2997 l
269.8548 293.3053 l
270.0521 293.3166 l
270.2467 293.3335 l
270.4413 293.3533 l
270.6331 293.3758 l
271.0222 293.4379 l
271.4057 293.5196 l
271.7864 293.6155 l
272.5337 293.8665 l
273.2585 294.188 l
273.9579 294.5828 l
274.6234 295.0481 l
275.2494 295.5839 l
275.8303 296.1902 l
276.3605 296.8585 l
277.2573 298.3559 l
277.621 299.1653 l
277.9312 300 l
278.4106 301.6751 l
278.7744 303.2345 l
278.9577 303.9226 l
279.0592 304.2328 l
279.1692 304.5205 l
S
[]189.3172 d
279.1693 304.5205 m
279.2961 304.7827 l
279.44 305.0139 l
279.6063 305.217 l
279.6994 305.3044 l
279.7981 305.3862 l
279.9053 305.4595 l
280.0209 305.5244 l
280.1449 305.578 l
280.2775 305.6259 l
280.4213 305.6626 l
280.5736 305.6907 l
280.74 305.7077 l
280.9148 305.7189 l
281.1037 305.7189 l
281.3068 305.7077 l
281.5211 305.6879 l
281.7524 305.6598 l
282.2571 305.5751 l
282.8268 305.4511 l
285.8301 304.6107 l
290.108 303.3755 l
292.694 302.7241 l
295.4914 302.1432 l
296.9296 301.9063 l
297.6487 301.8048 l
298.3678 301.7202 l
299.0812 301.6497 l
299.7834 301.5961 l
300.4743 301.5595 l
301.1511 301.5426 l
301.8054 301.5482 l
302.437 301.5736 l
303.0377 301.6243 l
303.6102 301.6976 l
304.1431 301.7963 l
304.6366 301.9204 l
305.085 302.0727 l
305.4855 302.2475 l
305.8295 302.4534 l
306.12 302.6846 l
306.3456 302.9412 l
306.5091 303.2261 l
306.6022 303.5363 l
306.6219 303.8719 l
306.5711 304.2328 l
306.4386 304.6163 l
306.23 305.0224 l
305.9395 305.4482 l
305.1104 306.3563 l
303.9457 307.3207 l
S
[]223.326 d
303.9457 307.3207 m
302.4539 308.3275 l
298.5567 310.3861 l
293.6556 312.3572 l
288.134 314.0859 l
282.4996 315.4508 l
279.815 315.9781 l
277.3136 316.3955 l
275.0633 316.7085 l
273.1288 316.9284 l
271.5609 317.0638 l
270.9292 317.1089 l
270.4075 317.1371 l
269.9986 317.154 l
269.7025 317.1654 l
269.5248 317.1682 l
269.4656 317.1682 l
269.5248 317.1682 l
269.7025 317.171 l
269.9986 317.1823 l
270.4075 317.1991 l
271.5609 317.2725 l
273.1288 317.4078 l
275.0633 317.6278 l
277.3136 317.9408 l
282.4996 318.8855 l
288.134 320.2504 l
293.6556 321.979 l
298.5567 323.9503 l
302.4539 326.0088 l
303.9457 327.0156 l
305.1104 327.98 l
305.9395 328.8881 l
306.23 329.3139 l
306.4386 329.72 l
306.5711 330.1035 l
306.6219 330.4645 l
306.6022 330.8001 l
306.5091 331.1102 l
306.3456 331.3951 l
306.12 331.6517 l
305.8295 331.8829 l
305.4855 332.0888 l
305.085 332.2636 l
304.6366 332.4159 l
304.1431 332.54 l
303.6102 332.6387 l
303.0377 332.712 l
302.437 332.7628 l
301.8054 332.7881 l
301.1511 332.7938 l
S
[]306.8114 d
301.1511 332.7938 m
300.4743 332.7769 l
299.7834 332.7402 l
299.0812 332.6866 l
298.3678 332.6161 l
296.9296 332.43 l
295.4914 332.1931 l
290.108 330.9608 l
285.8301 329.7256 l
284.1747 329.2406 l
282.8268 328.8853 l
282.2571 328.7611 l
281.9977 328.7132 l
281.7524 328.6766 l
281.5211 328.6484 l
281.3068 328.6286 l
281.1037 328.6174 l
280.9148 328.6174 l
280.74 328.6286 l
280.5736 328.6455 l
280.4213 328.6737 l
280.2775 328.7104 l
280.0209 328.8119 l
279.9053 328.8768 l
279.7981 328.9501 l
279.6063 329.1193 l
279.44 329.3224 l
279.2961 329.5536 l
279.1692 329.8158 l
278.9577 330.4137 l
278.7744 331.1018 l
278.4106 332.6612 l
278.1907 333.4931 l
277.9312 334.3363 l
277.621 335.171 l
277.2573 335.9804 l
276.3605 337.4778 l
275.8303 338.1461 l
275.2494 338.7525 l
274.6234 339.2882 l
273.9579 339.7535 l
273.2585 340.1483 l
272.5337 340.4698 l
272.1615 340.6052 l
271.7864 340.7208 l
271.4057 340.8167 l
271.0222 340.8984 l
270.6331 340.9605 l
270.4413 340.983 l
270.2467 341.0028 l
270.0521 341.0197 l
S
[]345.4944 d
270.0522 341.0197 m
269.8548 341.031 l
269.6602 341.0366 l
269.4656 341.0394 l
S
U
U
U
U
u
u
u
u
[]0 d
269.4656 192.2247 m
269.271 192.2275 l
269.0793 192.2275 l
268.8847 192.2332 l
268.6901 192.236 l
268.4955 192.2444 l
268.3009 192.2501 l
267.9118 192.2698 l
267.125 192.3206 l
266.3298 192.3826 l
265.5232 192.4418 l
265.1143 192.4672 l
264.9113 192.4785 l
264.7054 192.4869 l
264.4996 192.4954 l
264.2937 192.4982 l
264.0879 192.501 l
263.882 192.4982 l
263.679 192.4926 l
263.4731 192.4841 l
263.2673 192.47 l
263.0642 192.4503 l
262.8612 192.4249 l
262.6581 192.3939 l
262.2577 192.3149 l
261.8657 192.2049 l
261.485 192.0639 l
261.1184 191.8835 l
260.7687 191.6635 l
260.436 191.404 l
260.1286 191.0967 l
259.5928 190.3494 l
259.3672 189.9066 l
259.1754 189.4244 l
259.0147 188.9027 l
258.8878 188.3472 l
258.8342 188.0595 l
258.7891 187.7663 l
258.7496 187.4701 l
258.7186 187.1712 l
258.6932 186.8667 l
258.6734 186.5649 l
258.6565 186.2604 l
258.6424 185.9586 l
258.6255 185.3693 l
258.6199 185.0816 l
258.6114 184.7996 l
258.6029 184.5289 l
258.5917 184.2666 l
258.5776 184.0185 l
S
[]17.1175 d
258.5776 184.0185 m
258.555 183.7816 l
258.5296 183.556 l
258.4958 183.3473 l
258.4507 183.1555 l
258.3971 182.9807 l
258.3323 182.8228 l
258.2533 182.6846 l
258.1602 182.5634 l
258.0502 182.4646 l
257.9261 182.3857 l
257.7824 182.3265 l
257.6188 182.2898 l
257.4355 182.2729 l
257.2325 182.2757 l
257.0068 182.3011 l
256.7615 182.3462 l
256.4908 182.4083 l
255.1907 182.8313 l
251.7504 184.0918 l
250.831 184.3654 l
250.3855 184.4781 l
249.954 184.5684 l
249.5451 184.6361 l
249.1588 184.6727 l
248.8034 184.6812 l
248.4848 184.6558 l
248.2084 184.5937 l
247.9744 184.4951 l
247.7911 184.3597 l
247.6585 184.1821 l
247.5824 183.9677 l
247.5655 183.7139 l
247.605 183.4235 l
247.7037 183.0991 l
248.0731 182.349 l
248.654 181.4974 l
250.3093 179.6165 l
252.2636 177.7496 l
254.0205 176.1732 l
254.6719 175.5529 l
254.9172 175.2906 l
255.1033 175.065 l
255.2218 174.8704 l
255.2697 174.7097 l
255.2415 174.5856 l
255.1287 174.4953 l
254.9342 174.4361 l
254.6465 174.4136 l
254.2658 174.4192 l
253.7864 174.4559 l
S
[]43.8924 d
253.7864 174.4559 m
252.5259 174.6166 l
250.848 174.876 l
246.2937 175.5867 l
243.5301 175.9617 l
242.0721 176.1366 l
240.5916 176.2945 l
239.1083 176.4242 l
237.656 176.5258 l
236.2545 176.5878 l
234.9432 176.6047 l
233.7531 176.5765 l
232.7125 176.4947 l
231.8637 176.3565 l
231.2292 176.162 l
230.8457 175.911 l
230.7357 175.6036 l
230.9218 175.2455 l
231.421 174.8365 l
233.3809 173.9088 l
234.8388 173.404 l
236.5985 172.8823 l
240.9215 171.8389 l
246.0624 170.8603 l
251.6291 170.02 l
257.145 169.363 l
262.111 168.9174 l
264.2373 168.7707 l
266.0562 168.6692 l
267.5198 168.6043 l
268.5914 168.5705 l
269.2456 168.5592 l
269.4656 168.5564 l
269.2456 168.5536 l
268.5914 168.5423 l
267.5198 168.5085 l
266.0562 168.4436 l
262.111 168.1955 l
257.145 167.7499 l
251.6291 167.0928 l
246.0624 166.2525 l
240.9215 165.2739 l
236.5985 164.2306 l
234.8388 163.7088 l
233.3809 163.2041 l
232.2416 162.7218 l
231.421 162.2763 l
230.9218 161.8674 l
230.7357 161.5092 l
230.8457 161.2018 l
231.2292 160.9509 l
S
[]147.8277 d
231.2292 160.9509 m
231.8637 160.7563 l
232.7125 160.6181 l
233.7531 160.5363 l
234.9432 160.5081 l
236.2545 160.5251 l
237.656 160.5871 l
239.1083 160.6886 l
240.5916 160.8184 l
250.848 162.2368 l
252.5259 162.4962 l
253.2083 162.5893 l
253.7864 162.657 l
254.2658 162.6936 l
254.6465 162.6993 l
254.9342 162.6767 l
255.1287 162.6175 l
255.2415 162.5272 l
255.2697 162.4032 l
255.2218 162.2424 l
255.1033 162.0478 l
254.0205 160.9396 l
252.2636 159.3632 l
250.3093 157.4964 l
248.654 155.6154 l
248.0731 154.7638 l
247.8587 154.3746 l
247.7037 154.0137 l
247.605 153.6894 l
247.5655 153.3989 l
247.5824 153.1451 l
247.6585 152.9308 l
247.7911 152.7532 l
247.9744 152.6178 l
248.2084 152.5191 l
248.4848 152.457 l
248.8034 152.4316 l
249.1588 152.4401 l
249.5451 152.4768 l
249.954 152.5444 l
250.831 152.7475 l
251.7504 153.0211 l
253.5692 153.6668 l
255.1907 154.2816 l
255.8845 154.5241 l
256.2003 154.6228 l
256.4908 154.7046 l
256.7615 154.7666 l
257.0068 154.8117 l
257.2325 154.8371 l
257.4355 154.8399 l
S
[]195.0009 d
257.4355 154.8399 m
257.6188 154.823 l
257.7824 154.7864 l
257.9261 154.7271 l
258.0502 154.6482 l
258.1602 154.5495 l
258.2533 154.4282 l
258.3323 154.29 l
258.3971 154.1321 l
258.4507 153.9573 l
258.4958 153.7655 l
258.5296 153.5568 l
258.555 153.3312 l
258.5776 153.0944 l
258.5917 152.8462 l
258.6114 152.3132 l
258.6255 151.7436 l
258.634 151.4503 l
258.6424 151.1542 l
258.6565 150.8525 l
258.6734 150.5479 l
258.6932 150.2462 l
258.7186 149.9416 l
258.7496 149.6427 l
258.7891 149.3466 l
258.8878 148.7657 l
259.0147 148.2101 l
259.1754 147.6884 l
259.3672 147.2062 l
259.5928 146.7635 l
259.8465 146.3658 l
260.1286 146.0162 l
260.436 145.7088 l
260.7687 145.4493 l
261.1184 145.2294 l
261.485 145.0489 l
261.8657 144.9079 l
262.2577 144.7979 l
262.4579 144.7556 l
262.6581 144.719 l
262.8612 144.6879 l
263.0642 144.6626 l
263.2673 144.6428 l
263.4731 144.6287 l
263.679 144.6203 l
263.882 144.6146 l
264.0879 144.6118 l
264.2937 144.6146 l
264.4996 144.6174 l
264.7054 144.6259 l
266.3298 144.7302 l
S
[]211.3199 d
266.3298 144.7302 m
267.125 144.7923 l
267.5198 144.8205 l
267.9118 144.843 l
268.3009 144.8628 l
268.4955 144.8684 l
268.6901 144.8769 l
268.8847 144.8797 l
269.0793 144.8853 l
269.271 144.8853 l
269.4656 144.8882 l
269.6602 144.8853 l
269.8519 144.8853 l
270.0465 144.8797 l
270.2411 144.8769 l
270.4357 144.8684 l
270.6303 144.8628 l
271.0194 144.843 l
271.8062 144.7923 l
272.6014 144.7302 l
273.408 144.671 l
273.8168 144.6457 l
274.0199 144.6343 l
274.2257 144.6259 l
274.4316 144.6174 l
274.6375 144.6146 l
274.8433 144.6118 l
275.0492 144.6146 l
275.2523 144.6203 l
275.4581 144.6287 l
275.6639 144.6428 l
275.867 144.6626 l
276.07 144.6879 l
276.2731 144.719 l
276.6735 144.7979 l
277.0655 144.9079 l
277.4462 145.0489 l
277.8128 145.2294 l
278.1625 145.4493 l
278.4953 145.7088 l
278.8026 146.0162 l
279.0846 146.3658 l
279.3384 146.7635 l
279.564 147.2062 l
279.7558 147.6884 l
279.9165 148.2101 l
280.0434 148.7657 l
280.1421 149.3466 l
280.1816 149.6427 l
280.2126 149.9416 l
280.3198 152.3132 l
S
[]230.7972 d
280.3198 152.3132 m
280.3282 152.5839 l
280.3395 152.8462 l
280.3536 153.0944 l
280.3762 153.3312 l
280.4016 153.5568 l
280.4354 153.7655 l
280.4805 153.9573 l
280.5341 154.1321 l
280.5989 154.29 l
280.6779 154.4282 l
280.771 154.5495 l
280.881 154.6482 l
281.005 154.7271 l
281.1488 154.7864 l
281.3124 154.823 l
281.4957 154.8399 l
283.7404 154.2816 l
285.3619 153.6668 l
287.1808 153.0211 l
288.1002 152.7475 l
288.5457 152.6347 l
288.9772 152.5444 l
289.3861 152.4768 l
289.7724 152.4401 l
290.1278 152.4316 l
290.4464 152.457 l
290.7228 152.5191 l
290.9568 152.6178 l
291.1401 152.7532 l
291.2727 152.9308 l
291.3488 153.1451 l
291.3657 153.3989 l
291.3262 153.6894 l
291.2276 154.0137 l
291.0725 154.3746 l
290.8581 154.7638 l
290.2772 155.6154 l
288.6219 157.4964 l
286.6676 159.3632 l
284.9107 160.9396 l
284.2593 161.56 l
284.014 161.8222 l
283.8279 162.0478 l
283.7094 162.2424 l
283.6614 162.4032 l
283.6897 162.5272 l
283.8025 162.6175 l
283.9971 162.6767 l
284.2847 162.6993 l
284.6654 162.6936 l
S
[]257.8631 d
284.6654 162.6936 m
285.1448 162.657 l
288.0832 162.2368 l
292.6376 161.5261 l
295.4011 161.1511 l
296.8591 160.9763 l
298.3396 160.8184 l
299.8229 160.6886 l
301.2752 160.5871 l
302.6767 160.5251 l
303.988 160.5081 l
305.1781 160.5363 l
306.2186 160.6181 l
307.0675 160.7563 l
307.702 160.9509 l
308.0855 161.2018 l
308.1955 161.5092 l
308.0093 161.8674 l
307.5102 162.2763 l
306.6896 162.7218 l
305.5503 163.2041 l
302.3327 164.2306 l
298.0096 165.2739 l
292.8688 166.2525 l
287.3021 167.0928 l
281.7862 167.7499 l
276.8202 168.1955 l
274.6939 168.3421 l
272.875 168.4436 l
271.4114 168.5085 l
270.3398 168.5423 l
269.6856 168.5536 l
269.4656 168.5564 l
269.6856 168.5592 l
270.3398 168.5705 l
271.4114 168.6043 l
272.875 168.6692 l
276.8202 168.9174 l
281.7862 169.363 l
287.3021 170.02 l
292.8688 170.8603 l
298.0096 171.8389 l
302.3327 172.8823 l
305.5503 173.9088 l
306.6896 174.391 l
307.5102 174.8365 l
308.0093 175.2455 l
308.1955 175.6036 l
308.0855 175.911 l
307.702 176.162 l
307.0675 176.3565 l
S
[]362.9433 d
307.0675 176.3565 m
306.2186 176.4947 l
305.1781 176.5765 l
303.988 176.6047 l
302.6767 176.5878 l
301.2752 176.5258 l
299.8229 176.4242 l
298.3396 176.2945 l
292.6376 175.5867 l
288.0832 174.876 l
286.4053 174.6166 l
285.7229 174.5236 l
285.1448 174.4559 l
284.6654 174.4192 l
284.2847 174.4136 l
283.9971 174.4361 l
283.8025 174.4953 l
283.6897 174.5856 l
283.6614 174.7097 l
283.7094 174.8704 l
283.8279 175.065 l
284.9107 176.1732 l
286.6676 177.7496 l
288.6219 179.6165 l
289.5158 180.5724 l
290.2772 181.4974 l
290.8581 182.349 l
291.0725 182.7382 l
291.2276 183.0991 l
291.3262 183.4235 l
291.3657 183.7139 l
291.3488 183.9677 l
291.2727 184.1821 l
291.1401 184.3597 l
290.9568 184.4951 l
290.7228 184.5937 l
290.4464 184.6558 l
290.1278 184.6812 l
289.7724 184.6727 l
289.3861 184.6361 l
288.9772 184.5684 l
287.1808 184.0918 l
285.3619 183.446 l
283.7404 182.8313 l
283.0467 182.5887 l
282.7309 182.49 l
282.4404 182.4083 l
282.1697 182.3462 l
281.9244 182.3011 l
281.6987 182.2757 l
281.4957 182.2729 l
S
[]409.4545 d
281.4957 182.2729 m
281.3124 182.2898 l
281.1488 182.3265 l
281.005 182.3857 l
280.881 182.4646 l
280.771 182.5634 l
280.6779 182.6846 l
280.5989 182.8228 l
280.5341 182.9807 l
280.4805 183.1555 l
280.4354 183.3473 l
280.4016 183.556 l
280.3762 183.7816 l
280.3198 184.7996 l
280.3057 185.3693 l
280.2972 185.6625 l
280.2887 185.9586 l
280.2746 186.2604 l
280.2577 186.5649 l
280.238 186.8667 l
280.2126 187.1712 l
280.1816 187.4701 l
280.1421 187.7663 l
280.0434 188.3472 l
279.9165 188.9027 l
279.7558 189.4244 l
279.564 189.9066 l
279.3384 190.3494 l
279.0846 190.747 l
278.8026 191.0967 l
278.4953 191.404 l
278.1625 191.6635 l
277.8128 191.8835 l
277.4462 192.0639 l
277.0655 192.2049 l
276.6735 192.3149 l
276.2731 192.3939 l
276.07 192.4249 l
275.867 192.4503 l
275.6639 192.47 l
275.4581 192.4841 l
275.2523 192.4926 l
275.0492 192.4982 l
274.8433 192.501 l
274.6375 192.4982 l
274.4316 192.4954 l
274.2257 192.4869 l
272.6014 192.3826 l
269.4656 192.2247 l
S
U
U
U
U
u
u
800 Ar
[]0 d
269.8548 613.4594 m
269.8548 688.9594 l
S
0 O
0 g
0 J 0 j 1 w 4 M
269.8548 695.7671 m
271.0432 692.564 273.0716 688.5894 275.2185 686.1263 c
269.8548 688.0663 l
264.4916 686.1263 l
266.6383 688.5894 268.6667 692.564 269.8548 695.7671 c
f
U
u
0 R
0 G
1 J 1 j 1.128 w 10 M
269.8548 613.4594 m
323.2414 666.846 l
S
0 O
0 g
0 J 0 j 1 w 4 M
328.0552 671.6598 m
326.6306 668.5545 325.2544 664.3097 325.0308 661.0499 c
322.6099 666.2145 l
317.4457 668.6351 l
320.7053 668.8588 324.9501 670.235 328.0552 671.6598 c
f
U
U
0 To
1 0 0 1 264 705 0 Tp
TP
0 Tr
/_Times-Italic 18 Tf
0 Ts
100 Tz
0 Tt
1 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(E) Tx
(\r) TX 
TO
0 To
1 0 0 1 292 671 0 Tp
TP
0 Tr
/_Symbol 18 Tf
(q) Tx
(\r) TX 
TO
u
0 R
0 G
1 J 1 j 1.128 w 10 M
269.5192 464.4634 m
269.5192 515.9634 l
S
0 O
0 g
0 J 0 j 1 w 4 M
269.5192 522.7711 m
270.7076 519.568 272.736 515.5934 274.8829 513.1303 c
269.5192 515.0703 l
264.156 513.1303 l
266.3027 515.5934 268.3311 519.568 269.5192 522.7711 c
f
U
u
0 R
0 G
1 J 1 j 1.128 w 10 M
269.4656 317.1682 m
269.4656 368.6682 l
S
0 O
0 g
0 J 0 j 1 w 4 M
269.4656 375.4759 m
270.654 372.2728 272.6824 368.2982 274.8293 365.8351 c
269.4656 367.7751 l
264.1024 365.8351 l
266.2491 368.2982 268.2775 372.2728 269.4656 375.4759 c
f
U
u
0 R
0 G
1 J 1 j 1.128 w 10 M
269.4656 168.5564 m
269.4656 220.0564 l
S
0 O
0 g
0 J 0 j 1 w 4 M
269.4656 226.8641 m
270.654 223.661 272.6824 219.6864 274.8293 217.2233 c
269.4656 219.1633 l
264.1024 217.2233 l
266.2491 219.6864 268.2775 223.661 269.4656 226.8641 c
f
U
u
u
0 To
1 0 0 1 400.5828 605.4727 0 Tp
TP
0 Tr
/_Times-Roman 14 Tf
0 TA
28.512 0 Xb
XB
(  = 2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 392 606 0 Tp
TP
0 Tr
/_CMMI12 14 Tf
1 TA
36 0 Xb
XB
(\257) Tx
(\r) TX 
TO
U
u
0 To
1 0 0 1 400.5828 457.4402 0 Tp
TP
0 Tr
/_Times-Roman 14 Tf
0 TA
28.512 0 Xb
XB
(  = 4) Tx 
(\r) TX 
TO
0 To
1 0 0 1 392 457.9675 0 Tp
TP
0 Tr
/_CMMI12 14 Tf
1 TA
36 0 Xb
XB
(\257) Tx
(\r) TX 
TO
U
u
0 To
1 0 0 1 400.5828 311.4402 0 Tp
TP
0 Tr
/_Times-Roman 14 Tf
0 TA
28.512 0 Xb
XB
(  = 8) Tx 
(\r) TX 
TO
0 To
1 0 0 1 392 311.9675 0 Tp
TP
0 Tr
/_CMMI12 14 Tf
1 TA
36 0 Xb
XB
(\257) Tx
(\r) TX 
TO
U
u
0 To
1 0 0 1 400.5828 169.4402 0 Tp
TP
0 Tr
/_Times-Roman 14 Tf
0 TA
28.512 0 Xb
XB
(  = 16) Tx 
(\r) TX 
TO
0 To
1 0 0 1 392 169.9675 0 Tp
TP
0 Tr
/_CMMI12 14 Tf
1 TA
36 0 Xb
XB
(\257) Tx
(\r) TX 
TO
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
